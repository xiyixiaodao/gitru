name: Rust Cross-Platform Build

on:
  push:
    branches: [main, dev]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
          components: clippy, rustfmt

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-rust-target
        with:
          path: |
            ~/.cargo
            ~/.rustup
            target
          key: ${{ runner.os }}-rust-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-${{ matrix.target }}-

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy check
        run: cargo clippy --all-targets -- -D warnings

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Install binary
        run: cargo install --path . --target ${{ matrix.target }}
